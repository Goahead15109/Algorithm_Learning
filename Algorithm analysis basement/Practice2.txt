习题二
1.证明题
（1）由定义2.1可得；T1(n)<=c*f(n),T2(n)<=d*g(n)
	T1(n)+T2(n) <= c*f(n) + d*g(n)
				<= e*max(f(n),g(n))
				=  max(O(f(n)),O(g(n)))
（2）T1(n)*T2(n) <= c*f(n)*d*g(n)
				=  c*d*f(n)*g(n)
				=  O(f(n))*O(g(n))
（3）在顺序执行中应用加法定理
	在循环嵌套中应用乘法定理
2.算法分析
（1）功能：1~n的平方和
	基本语句：S = S + i*i;
	基本语句执行次数：n
	时间复杂性：O(n)
（2）功能：n的平方
	基本语句：Q(n-1)+2*n-1;
	基本语句执行次数：n-1
	时间复杂性：O(n)
3.算法分析
（1）基本语句执行次数：
		基本语句：y=y+i*j;
		求和Sum i(1,n/2)(n+1-2*i) = n/2*(n+1)-n/2*(1+n/2)=n^2/4
（2）基本语句执行次数：
		基本语句：m=m+1;
		求和Sum i(1,n)(2*i) = n*(n+1)
4.递推关系式
（1）T(n) = 3*T(n-1) = 3^2*T(n-2) = ... = 3^(n-1)*T(1) = 4*3^(n-1)
（2）假定n = 3^k
	T(n) = 2*T(n/3)+n
		 = 2*(2*T(n/3^2)+n/3)+n = 2^2*T(n/3^2)+(2/3+1)*n
		 = 2*(2*(2*T(n/3^3)+n/3^2)*n/3)+n = 2^3*T(n/3^3)+(2^2/3^2+2/3+1)*n
		 = ...... = 2^k*T(1)+(2^(k-1)/3^(k-1)+2^(k-2)/3^(k-2)+...+2/3+1)*3^k
		 = 3^(k+1)-2^(k+1)
5.平凡下界
（1）n 与下届紧密
（2）n^2 与下界紧密
（3）n 与下界不紧密
（4）2^n 与下界紧密
6.基于比较的排序算法的时间下界为 T1(n) = nlog2(n);
	对数组进行一次遍历的时间下界为 T2(n) = n;
	该问题的一个紧密下界 T(n) = T1(n) + T2(n) = nlog2(n).
7.参考例2.11，只需修改叶节点为中值输出即可。
8.略
